<Project>

  <PropertyGroup>
    <PackageId Condition="'$(PackageId)' == ''">$(AssemblyName)</PackageId>
    <Description Condition="'$(Description)' == ''">$(PackageId)</Description>
    <PackageProjectUrl Condition="'$(PackageProjectUrl)' == ''">https://docs.particular.net/nuget/$(PackageId)</PackageProjectUrl>
    <BlockInvalidTargetFrameworksPath>$(ParticularPackagingPackagePath)BlockInvalidTargetFrameworks\</BlockInvalidTargetFrameworksPath>
  </PropertyGroup>

  <PropertyGroup Condition="'$(IncludeBuildOutput)' == 'false'">
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
    <DocumentationFile />
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\..\$(PackageLicenseFile)" Condition="Exists('..\..\$(PackageLicenseFile)')" Pack="true" PackagePath="$(PackageLicenseFile)" Visible="false" />
    <None Include="$(ParticularPackagingPackagePath)$(PackageIcon)" Condition="Exists('$(ParticularPackagingPackagePath)$(PackageIcon)')" Pack="true" PackagePath="$(PackageIcon)" Visible="false" />
  </ItemGroup>

  <ItemGroup Condition="'$(BlockInvalidTargetFrameworks)' != 'false' And '$(IncludeBuildOutput)' != 'false' And ('$(PackageType)' == '' Or '$(PackageType)' == 'Dependency') And '$(TargetFrameworks)' == 'net472;netcoreapp2.1'">
    <None Include="$(BlockInvalidTargetFrameworksPath)BlockNetCore.targets" Condition="Exists('$(BlockInvalidTargetFrameworksPath)BlockNetCore.targets')" Pack="true" PackagePath="build\netcoreapp2.0\$(PackageId).targets" Visible="false" />
    <None Include="$(BlockInvalidTargetFrameworksPath)BlockNetFramework.targets" Condition="Exists('$(BlockInvalidTargetFrameworksPath)BlockNetFramework.targets')" Pack="true" PackagePath="build\net461\$(PackageId).targets" Visible="false" />
    <None Include="$(BlockInvalidTargetFrameworksPath)BlockNetStandard.targets" Condition="Exists('$(BlockInvalidTargetFrameworksPath)BlockNetStandard.targets')" Pack="true" PackagePath="build\netstandard2.0\$(PackageId).targets" Visible="false" />
    <None Include="$(BlockInvalidTargetFrameworksPath)\_._" Condition="Exists('$(BlockInvalidTargetFrameworksPath)_._')" Pack="true" PackagePath="build\net472;build\netcoreapp2.1" Visible="false" />
  </ItemGroup>

  <ItemGroup Condition="'$(BlockInvalidTargetFrameworks)' != 'false' And '$(IncludeBuildOutput)' != 'false' And ('$(PackageType)' == '' Or '$(PackageType)' == 'Dependency') And '$(IsInnerBuild)' != 'true' And '$(TargetFramework)' == 'net472'">
    <None Include="$(BlockInvalidTargetFrameworksPath)BlockNetFramework.targets" Condition="Exists('$(BlockInvalidTargetFrameworksPath)BlockNetFramework.targets')" Pack="true" PackagePath="build\net461\$(PackageId).targets" Visible="false" />
    <None Include="$(BlockInvalidTargetFrameworksPath)BlockNetStandardAndNetCore.targets" Condition="Exists('$(BlockInvalidTargetFrameworksPath)BlockNetStandardAndNetCore.targets')" Pack="true" PackagePath="build\netstandard2.0\$(PackageId).targets" Visible="false" />
    <None Include="$(BlockInvalidTargetFrameworksPath)\_._" Condition="Exists('$(BlockInvalidTargetFrameworksPath)_._')" Pack="true" PackagePath="build\net472" Visible="false" />
  </ItemGroup>

  <Target Name="FixPackageVersion" AfterTargets="GetVersion" BeforeTargets="GenerateNuspec">
    <PropertyGroup>
      <PackageVersion>$(GitVersion_SemVer)</PackageVersion>
    </PropertyGroup>
  </Target>

  <Target Name="ConvertProjectReferenceVersionsToVersionRanges" AfterTargets="_GetProjectReferenceVersions">
    <PropertyGroup>
      <NumberOfProjectReferences>@(_ProjectReferencesWithVersions->Count())</NumberOfProjectReferences>
    </PropertyGroup>
    <ItemGroup Condition="$(NumberOfProjectReferences) &gt; 0">
      <_ProjectReferencesWithVersionRanges Include="@(_ProjectReferencesWithVersions)">
        <ProjectVersion>[%(_ProjectReferencesWithVersions.ProjectVersion), $([MSBuild]::Add($([System.Text.RegularExpressions.Regex]::Match('%(_ProjectReferencesWithVersions.ProjectVersion)', '^\d+').Value), '1')))</ProjectVersion>
      </_ProjectReferencesWithVersionRanges>
      <_ProjectReferencesWithVersions Remove="@(_ProjectReferencesWithVersions)" />
      <_ProjectReferencesWithVersions Include="@(_ProjectReferencesWithVersionRanges)" />
    </ItemGroup>
  </Target>

  <Target Name="SuppressNuGetPathLengthWarning" AfterTargets="GetVersion" BeforeTargets="CoreCompile" Condition="'$(CI)' != '' Or '$(TEAMCITY_VERSION)' != ''">
    <PropertyGroup Condition="'$(GitVersion_BranchName)' != 'master' And '$(GitVersion_BranchName.StartsWith(`release-`))' == 'false'">
      <NoWarn>$(NoWarn);NU5123</NoWarn>
    </PropertyGroup>
  </Target>

</Project>
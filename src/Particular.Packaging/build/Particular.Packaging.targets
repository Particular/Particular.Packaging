<Project>

  <PropertyGroup>
    <PackageId Condition="'$(PackageId)' == ''">$(AssemblyName)</PackageId>
    <Description Condition="'$(Description)' == ''">$(PackageId)</Description>
    <PackageProjectUrl Condition="'$(PackageProjectUrl)' == ''">https://docs.particular.net/nuget/$(PackageId)</PackageProjectUrl>
  </PropertyGroup>

  <PropertyGroup Condition="'$(IncludeBuildOutput)' == 'false'">
    <GenerateDocumentationFile>false</GenerateDocumentationFile>
    <DocumentationFile />
  </PropertyGroup>

  <ItemGroup>
    <None Include="..\..\$(PackageLicenseFile)" Condition="Exists('..\..\$(PackageLicenseFile)')" Pack="true" PackagePath="$(PackageLicenseFile)" Visible="false" />
    <None Include="$(ParticularPackagingPackagePath)$(PackageIcon)" Condition="Exists('$(ParticularPackagingPackagePath)$(PackageIcon)')" Pack="true" PackagePath="$(PackageIcon)" Visible="false" />
  </ItemGroup>

  <Target Name="FixPackageVersion" AfterTargets="GetVersion" BeforeTargets="GenerateNuspec">
    <PropertyGroup>
      <PackageVersion>$(GitVersion_SemVer)</PackageVersion>
    </PropertyGroup>
  </Target>

  <Target Name="ConvertProjectReferenceVersionsToVersionRanges" AfterTargets="_GetProjectReferenceVersions">
    <PropertyGroup>
      <NumberOfProjectReferences>@(_ProjectReferencesWithVersions->Count())</NumberOfProjectReferences>
    </PropertyGroup>
    <ItemGroup Condition="$(NumberOfProjectReferences) &gt; 0">
      <_ProjectReferencesWithVersionRanges Include="@(_ProjectReferencesWithVersions)">
        <ProjectVersion>[%(_ProjectReferencesWithVersions.ProjectVersion), $([MSBuild]::Add($([System.Text.RegularExpressions.Regex]::Match('%(_ProjectReferencesWithVersions.ProjectVersion)', '^\d+').Value), '1')))</ProjectVersion>
      </_ProjectReferencesWithVersionRanges>
      <_ProjectReferencesWithVersions Remove="@(_ProjectReferencesWithVersions)" />
      <_ProjectReferencesWithVersions Include="@(_ProjectReferencesWithVersionRanges)" />
    </ItemGroup>
  </Target>

  <Target Name="SuppressNuGetPathLengthWarning" AfterTargets="GetVersion" BeforeTargets="CoreCompile" Condition="'$(CI)' != '' Or '$(TEAMCITY_VERSION)' != ''">
    <PropertyGroup Condition="'$(GitVersion_BranchName)' != 'master' And $(GitVersion_BranchName.StartsWith('release-')) == false">
      <NoWarn>$(NoWarn);NU5123</NoWarn>
    </PropertyGroup>
  </Target>

</Project>